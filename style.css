:root {
}

/* reset */
* {
  margin: 0;
}

/* Make box-sing default to border-box */
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

html:not([lang]),
html[lang=""] {
  border-top: 20px solid red;
}

html:not([lang]),html[lang=""] { border-top: 20px solid red; }
img:not([alt]),img[alt=""] { border: 5px dashed red; }
canvas:not([role]),canvas:not([aria-label]),canvas[role=""],canvas[aria-label=""] { border: 5px dashed red; }



/* Todo: move @import to html to benefit from cached fonts */
@import url('https://fonts.googleapis.com/css?family=Ubuntu:900|Poppins:400');

html {
  font-size: 100%;
  font-family: 'Ubuntu', sans-serif;
} /*16px*/
body {
  margin: 0;
  background-color: hsl(197, 58%, 8%);
  position: relative;
  color: #ffffff;
  overflow-x: hidden;
}
header {
  height: 200px;
  position: fixed;
  width: 100%;
  z-index: 100;
  background-color: hsl(60, 89%, 52%);
  font-size: 1.2em;
  color: hsl(197, 58%, 8%);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 2rem;
}
footer{
  height: 200px;
  width: 100%;
  background-color: hsl(60, 89%, 52%);
  font-size: 5em;
  color: hsl(197, 58%, 8%);
  position: absolute;
}

h3 {
  line-height: 1;
}
main {
  position: relative;
  top: 232px;
  margin: 0 20px;
  height: auto;
}
.inside-main {
  background: hsla(0, 5%, 15%, 0.8);
  min-height: 400px;
  margin-bottom: 2em;
}
#one {
  background-color: hsl(282, 100%, 75%);
}

/* This below rule is somewhat pointless and the solution a bit contorted as the browsers that don't support inert also don't support selector() function syntax.
 * To make this work you'll need to check if inert is support and if so keep the element display as set.
 */
@supports not selector([inert]) {
  #one {
    background-color: hsl(0, 48%, 46%);
  }
}
.mobile-active #one {
  background-color: hsl(219, 48%, 46%);
}
main.mobile-menu-active {
  display: none;
}
@supports selector([inert]) {
  main.mobile-menu-active {
    display: revert;
  }
  main.mobile-menu-active #one {
    background-color: hsl(219, 48%, 46%);
  }
}

#two {
  background-color: hsl(210, 100%, 75%);
}
#three {
  background-color: hsl(113, 100%, 70%);
}
#four {
  background-color: hsl(260, 76%, 64%);
}

/* Mobile menu button */
.mobile-menu-toggle {
  cursor: pointer;
  z-index: 10;
}

/* Mobile Menu */
nav {
  display: none;
  position: absolute;
  background: rgba(255,255,255,0.5);
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  /* Style for flex */
  align-items: center;
  justify-content: center;
  text-align: center;
}
nav.open {
  display: flex;
}
menu {
  padding-left: 0;
}
menu li {
  list-style: none;
  padding: .5rem;
  margin-bottom: 1px;
}
a:link {
  color: black;
  background-color: pink;
  padding: .5rem;
  text-decoration: none;
}
a:visited {
  background-color: lemonchiffon;
  color: orangered;
}
a:hover {
  color: #ffffff;
  background-color: salmon;
}
a:active {
  background-color: #0fadff;
}
a:focus,
button:focus {
  /* Technically isn't needed if you don't want focus to show on click but if the framework you are using had disabled it you'll need to add it back.*/
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

